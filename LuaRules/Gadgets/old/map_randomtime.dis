
function gadget:GetInfo ()
    return {
        name      = "Evil light",
        desc      = "Sets light conditions on the map",
        author    = "Code_Man, aZaremoth",
        date      = "29/4/2016",
        license   = "MIT X11",
        layer     = 1,
        enabled   = true
    }
end

local red = 0.5
local green = 0.5
local blue = 0.5
local alpha = 0.5

if (not gadgetHandler:IsSyncedCode()) then
    return false
end

function gadget:Initialize ()
    local mapOptions = Spring.GetMapOptions ()
    if mapOptions ~= nil and #mapOptions ~= 0 then
        if tonumber (mapOptions.weather) == 0 then
            gadgetHandler:RemoveGadget ()
        end
    end
end

function gadget:GamePreload ()
end

function gadget:GameStart ()
      Spring.SetSunManualControl (true)
    Spring.SetSunLighting ({groundAmbientColor = {red, green, blue}})
    Spring.SetSunLighting ({groundDiffuseColor = {red, green, blue}})
    Spring.SetSunLighting ({groundSpecularColor = {red, green, blue}})
    Spring.SetSunLighting ({unitAmbientColor = {red, green, blue}})
    Spring.SetSunLighting ({unitDiffuseColor = {red, green, blue}})
    Spring.SetSunLighting ({unitSpecularColor = {red, green, blue}})	  
end

--[[
function gadget:GameFrame (n)
	if n % 30 ~= 0 then
        return
    end

   red = red + 0.005
   blue = blue + 0.004
  green = green + 0.004
   
--   Spring.SetSunDirection  ( math.random(1)*1000, math.random(1)*1000, math.random(1)*1000 )
   
    Spring.SetSunLighting ({groundAmbientColor = {red, green, blue}})
    Spring.SetSunLighting ({groundDiffuseColor = {red, green, blue}})
    Spring.SetSunLighting ({groundSpecularColor = {red, green, blue}})
    Spring.SetSunLighting ({unitAmbientColor = {red, green, blue}})
    Spring.SetSunLighting ({unitDiffuseColor = {red, green, blue}})
    Spring.SetSunLighting ({unitSpecularColor = {red, green, blue}})
--    Spring.SetSunLighting ({specularExponent = value})
    Spring.SetAtmosphere ({sunColor = {red, green, blue, alpha}})
    Spring.SetAtmosphere ({skyColor = {red, green, blue, alpha}})
    Spring.SetAtmosphere ({cloudColor = {red, green, blue, alpha}})
    Spring.SetAtmosphere ({fogStart = 0.1, fogEnd = 0.6, fogColor = {red, green, blue, alpha}}) -- Decoupled from map lightning
end ]]--
